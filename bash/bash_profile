# ~/.bash_profile: executed by bash(1) for login shells.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

# the default umask is set in /etc/login.defs
#umask 022

# include .bashrc if it exists
if [ -f ~/.bashrc ]; then
    . ~/.bashrc
fi

if hash gsed 2>/dev/null; then
    alias sed=gsed
fi

if hash brew 2>/dev/null; then
    if [ -f $(brew --prefix)/etc/bash_completion ]; then
    	HAS_BREW=Yes
    fi
fi

if [[ $HAS_BREW = "Yes" ]]; then
    . $(brew --prefix)/etc/bash_completion
elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
elif [ -f ~/.git_bash_completion ]; then
    . ~/.git_bash_completion
fi

if [ -f ~/.git-prompt.bash ]; then
    . ~/.git-prompt.bash
fi

if [[ -d ~/projects ]]; then
    MYDIR=~/projects/dotfiles
elif [[ -d ~/Development ]]; then
    MYDIR=~/Development/dotfiles
elif [[ -d ~/Code ]]; then
    MYDIR=~/Code/dotfiles
elif [[ -d ~/code ]]; then
    MYDIR=~/code/dotfiles
else
    MYDIR=find ~ -name dotfiles -type d -print -quit
fi

if [[ -d /Volumes/Sinkhole/vagrant_home ]]; then
    export VAGRANT_HOME=/Volumes/Sinkhole/vagrant_home
fi

. $MYDIR/bash/git_completion.bash
. $MYDIR/bash/bash_colours

# set PATH so it includes user's private bin if it exists
if [ -d ~/bin ] ; then
    PATH=~/bin:"${PATH}"
fi

# do the same with MANPATH
if [ -d ~/man ]; then
    MANPATH=~/man${MANPATH:-:}
    export MANPATH
fi

export EDITOR=vim

GIT_PS1_SHOWDIRTYSTATE=true

export LS_OPTIONS='--color=auto'
export CLICOLOR='Yes'
export LSCOLORS=gxfxbEaEBxxEhEhBaDaCaD

export PS1=$LIGHT_GRAY"\u@\h"'$(
    if [[ $(__git_ps1) =~ \*\)$ ]]
    then echo "'$YELLOW'"$(__git_ps1 " (%s)")
    elif [[ $(__git_ps1) =~ \+\)$ ]]
    then echo "'$MAGENTA'"$(__git_ps1 " (%s)")
    else echo "'$CYAN'"$(__git_ps1 " (%s)")
    fi)'$BLUE" \w"$GREEN": "

alias ll='ls -lah'
alias gg='git status -s'

function p { cd ~/code/$1; }

[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm"  # This loads RVM into a shell session.

[[ -e /usr/local/bin/virtualenvwrapper.sh ]] && source /usr/local/bin/virtualenvwrapper.sh
#`echo $- | grep -qs i` && byobu-launcher && exit 0

# MacPorts Installer addition on 2014-02-25_at_12:26:12: adding an appropriate PATH variable for use with MacPorts.
export PATH=/opt/local/bin:/opt/local/sbin:$PATH
# Finished adapting your PATH environment variable for use with MacPorts.

export PATH=$PATH:$MYDIR/bin

# Remove duplicates from PATH
export CLEAN_PATH=`echo $PATH | sed -e"s/:/\n/g"| awk '!x[$0]++' | xargs -I "{}" bash -c 'test -s {} && echo -n {}:' | sed 's/:$//'`

function add_node_to_path {
        export PATH=$(npm bin):$CLEAN_PATH
}

HISTSIZE=100000
HISTFILESIZE=200000


# If you use #'s for defer and start dates, you'll need to escape the #'s or
# quote the whole string.

function task () {
  if [[ $# -eq 0 ]]; then
        echo "Usage: some task! @context ::project #defer #due //note"
    #oapen -a "OmniFocus"
  elif hash osascript 2>/dev/null; then
    osascript <<EOT
    tell application "OmniFocus"
      parse tasks into default document with transport text "$@"
    end tell
EOT
  elif [[ -d ~/Dropbox/File\ Transfer ]]; then
    echo "Send to Dropbox"
    if [[ ! -d ~/Dropbox/File\ Transfer/Omnifocus ]]; then
        mkdir ~/Dropbox/File\ Transfer/Omnifocus
    fi
    echo "$@" >> ~/Dropbox/File\ Transfer/Omnifocus/`hostname`-tasks.txt
  else
    echo "Need either to be on OSX or have Dropbox available"
  fi
}


if hash npm 2>/dev/null; then
    PROMPT_COMMAND=add_node_to_path
fi


if [[ -e ~/.bash_profile.local ]];
then
    source ~/.bash_profile.local
fi
